<?xml version="1.0" encoding="utf-8" ?>
<!--
	Copyright (c) 2016, TecSec, Inc.

	Redistribution and use in source and binary forms, with or without
	modification, are permitted provided that the following conditions are met:
	
		* Redistributions of source code must retain the above copyright
		  notice, this list of conditions and the following disclaimer.
		* Redistributions in binary form must reproduce the above copyright
		  notice, this list of conditions and the following disclaimer in the
		  documentation and/or other materials provided with the distribution.
		* Neither the name of TecSec nor the names of the contributors may be
		  used to endorse or promote products derived from this software 
		  without specific prior written permission.
		 
	ALTERNATIVELY, provided that this notice is retained in full, this product
	may be distributed under the terms of the GNU General Public License (GPL),
	in which case the provisions of the GPL apply INSTEAD OF those given above.
		 
	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
	ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
	DISCLAIMED.  IN NO EVENT SHALL TECSEC BE LIABLE FOR ANY 
	DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	LOSS OF USE, DATA OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
	SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

  Written by Roger Butler
-->
<Root xmlns="http://schemas.tecsec.com/xml2asn1codegen/2015">
  <File Name="Asn1CkmHeader" SourceFile="Asn1CkmHeader.cpp" HeaderFile="Asn1CkmHeader.h"  ExportSymbol="VEILCORE_API" TemplateExternSymbol="VEILCORE_TEMPLATE_EXTERN">
    <Import Name="CryptoAsn1.export"/>
    
    <Namespace Name="Asn1">
      <Namespace Name="CMS">
        <Sequence Name="CmsName" JSONName="namepart">
          <OID Name="OID" Optional="true" JSONName="oid"/>
          <Any Name="Value" Optional="true" JSONName="part"/>
          <Bool Name="PrimaryDistinguished" Default="true" JSONName="primary"/>
          <!--// TODO:  Needs valuesWithContext-->
        </Sequence>
        <Sequence Name="CmsIssuerAndSerialNumber" JSONName="nameAndSerial">
          <SequenceOf Name="Name" Tag="Set" JSONName="nameParts">
            <Sequence Name="CmsName" ElementType="CmsName" Tag="Sequence" Type="Universal" JSONName="namePart"/>
          </SequenceOf>
          <OctetString Name="SerialNumber" JSONName="serial"/>
        </Sequence>
        <Sequence Name="CmsHE_Attribute" JSONName="attribute">
          <Guid Name="Id" JSONName="id"/>
          <Int32 Name="Version" Initializer="0" JSONName="version"/>
          <Int32 Name="CryptoGroupNumber" Initializer="0" JSONName="cgNo"/>
          <OctetString Name="Signature" Optional="true" JSONName="signature"/>
        </Sequence>
        <Sequence Name="CmsHE_AttributeListExtension" JSONName="attributeListExtension">
          <SequenceOf Name="Attributes" JSONName="attributes">
            <Sequence Name="CmsHE_Attribute" ElementType="CmsHE_Attribute" JSONName="attribute"/>
          </SequenceOf>
        </Sequence>
        <Sequence Name="CmsHE_Hash" JSONName="hash">
          <Sequence Name="Algorithm" ElementType="AlgorithmIdentifier" JSONName="algorithm"/>
          <OctetString Name="Hash" JSONName="value"/>
        </Sequence>
        <Sequence Name="CmsHE_CryptoGroup" JSONName="cg">
          <Guid Name="CryptoGroupId" JSONName="id"/>
          <Int32 Name="CML" Initializer="0" JSONName="cml"/>
          <OctetString Name="EphemeralPublic" Optional="true" JSONName="ephPub"/>
        </Sequence>
        <Sequence Name="CmsHE_CryptoGroupList" JSONName="cgList">
          <SequenceOf Name="CryptoGroup" JSONName="list">
            <Sequence Name="CmsHE_CryptoGroup" ElementType="CmsHE_CryptoGroup" JSONName="cg"/>
          </SequenceOf>
        </Sequence>
        <Sequence Name="CmsHE_FullCert" JSONName="fullCert">
          <OctetString Name="Certificate" JSONName="cert"/>
          <OctetString Name="ProtectedValue" Optional="true" JSONName="value"/>
        </Sequence>
        <Sequence Name="CmsHE_PartialCert" JSONName="partialCert">
          <OctetString Name="KeyId" JSONName="keyId"/>
          <OctetString Name="Subject" JSONName="subject"/>
          <OctetString Name="ProtectedValue" Optional="true" JSONName="value"/>
        </Sequence>
        <Sequence Name="CmsHE_Pin" JSONName="pin">
          <OctetString Name="Salt" JSONName="salt"/>
          <OctetString Name="HMAC" JSONName="mac"/>
          <Int32 Name="Iterations" Initializer="1000" JSONName="count"/>
          <Int32 Name="KeySize" Initializer="32" JSONName="keySize"/>
          <String Name="Description" JSONName="description"/>
          <OctetString Name="ProtectedValue" Optional="true" JSONName="value"/>
        </Sequence>
        <Sequence Name="CmsHE_Attrs" JSONName="attributeExtension">
          <SequenceOf Name="AttrIndices" JSONName="indexList">
            <Int32 Name="AttrIndex" JSONName="index"/>
          </SequenceOf>
          <OctetString Name="EncryptedRandom" Optional="true" JSONName="encRandom"/>
        </Sequence>
        <Sequence Name="CmsHE_External" JSONName="external">
          <OID Name="OID" JSONName="oid"/>
          <OctetString Name="Parameters" JSONName="parameters"/>
          <OctetString Name="ProtectedValue" Optional="true" JSONName="value"/>
        </Sequence>
        <SequenceOf Name="CmsHE_AccessGroups" JSONName="groupList">
          <Choice Name="Item" JSONName="groupType">
            <Sequence Name="CertItem" ElementType="CmsHE_FullCert" Tag="0" Type="Context" JSONName="certItem"/>
            <Sequence Name="PartialItem" ElementType="CmsHE_PartialCert" Tag="1" Type="Context" JSONName="partialCert"/>
            <Sequence Name="PinItem" ElementType="CmsHE_Pin" Tag="2" Type="Context" JSONName="pinItem"/>
            <Sequence Name="AttrItem" ElementType="CmsHE_Attrs" Tag="3" Type="Context" JSONName="attributeItem"/>
            <Sequence Name="ExternalItem" ElementType="CmsHE_External" Tag="4" Type="Context" JSONName="externalItem"/>
          </Choice>
        </SequenceOf>
        <Sequence Name="CmsExtension" JSONName="extension">
          <OID Name="OID" JSONName="oid"/>
          <Bool Name="Critical" Default="false" JSONName="critical"/>
          <OctetString Name="Value" JSONName="value"/>
        </Sequence>
        <Sequence Name="CmsHeaderData" JSONName="header">
          <Part Name="Signable" JSONName="signable">
            <OID Name="OID" JSONName="oid"/>
            <Int32 Name="Version" JSONName="version"/>
            <Int32 Name="CombinerVersion" JSONName="combinerVersion"/>
            <Choice Name="WhoCreated" JSONName="who"/>
            <Date Name="CreationDate" JSONName="created"/>
            <Choice Name="EncAlg" JSONName="encAlg"/>
            <Int32 Name="Compression" JSONName="compression"/>
            <Int32 Name="Padding" JSONName="padding"/>

            <Guid Name="objectId" JSONName="objId"/>
            <SequenceOf Name="ProtectedExtensions" JSONName="protected"/>
            <Sequence Name="SignatureAlgorithm" ElementType="AlgorithmIdentifier" JSONName="sigAlg"/>
          </Part>
          <OID Name="OID" JSONName="oid"/>
          <Int32 Name="Version" JSONName="version"/>
          <Int32 Name="CombinerVersion" JSONName="combinerVersion"/>
          <Choice Name="WhoCreated" JSONName="who">
            <Sequence Name="Issuer" ElementType="CmsIssuerAndSerialNumber" JSONName="issuer"/>
            <OctetString Name="SubjectId" Tag="0" Type="Context" JSONName="subjectId"/>
            <Guid Name="SubjectGuid" Tag="1" Type="Context" JSONName="subjectGuid"/>
          </Choice>
          <Date Name="CreationDate" JSONName="created"/>
          <Choice Name="EncAlg" JSONName="encAlg">
            <Enum Name="EncryptionAlgorithmId" ElementType="tscrypto::TS_ALG_ID" BaseType="Int32" Tag="Number" Initializer="tscrypto::_TS_ALG_ID::TS_ALG_INVALID" JSONName="algId"/>
            <Sequence Name="EncryptionAlgorithm" ElementType="AlgorithmIdentifier" JSONName="algorithm"/>
          </Choice>
          <Int32 Name="Compression" Default="0" Tag="0" Type="Context" JSONName="compression"/>
          <Int32 Name="Padding" Default="0" Tag="1" Type="Context" JSONName="padding"/>

          <Guid Name="objectId" Tag="6" Type="Context" Optional="true" JSONName="objId"/>

          <SequenceOf Name="ProtectedExtensions" Tag="2" Type="Context" Optional="true" JSONName="protected">
            <Sequence Name="CmsExtension" ElementType="CmsExtension" Tag="Sequence" Type="Universal" JSONName="extension"/>
          </SequenceOf>
          <Sequence Name="SignatureAlgorithm" ElementType="AlgorithmIdentifier" Tag="3" Type="Context" Optional="true" JSONName="sigAlg"/>
          <OctetString Name="Signature" Tag="4" Type="Context" Optional="true" JSONName="signature"/>
          <SequenceOf Name="UnprotectedExtensions" Tag="5" Type="Context" Optional="true" JSONName="unprotected">
            <Sequence Name="CmsExtension" ElementType="CmsExtension" Tag="Sequence" Type="Universal" JSONName="ext"/>
          </SequenceOf>
          <Int32 Name="PaddedSize" Tag="7" Type="Context" Optional="true" JSONName="paddedSize"/>

          <!--<Function ReturnType="tscrypto::TS_ALG_ID" Name="getEncryptionAlgorithmAsId" Parameters="" suffix="const">
                        <Description>
                            <![CDATA[<Summary>Retrieves the encryption algorithm id translated into a TS_ALG_ID</Summary>
<Returns>The TS_ALG_ID of the encryption algorithm</Returns>
]]>
                        </Description>
<![CDATA[
switch (_EncAlg.selectedItem)
{
case CmsHeaderData_EncAlg::Choice_EncryptionAlgorithmId: // ID
    return _EncAlg._EncryptionAlgorithmId;
case CmsHeaderData_EncAlg::Choice_EncryptionAlgorithm: // AlgorithmIdentifier
    return tsCrypto::OIDtoID(_EncAlg._EncryptionAlgorithm._oid.oidString());
default:
    return tscrypto::_TS_ALG_ID::TS_ALG_INVALID;
}
]]>
                    </Function>
                    <Function ReturnType="tscrypto::tsCryptoData" Name="getEncryptionAlgorithmAsOID" Parameters="" suffix="const">
<![CDATA[
switch (_EncAlg.selectedItem)
{
case CmsHeaderData_EncAlg::Choice_EncryptionAlgorithmId: // ID
    return tscrypto::tsCryptoData(tsCrypto::IDtoOID(_EncAlg._EncryptionAlgorithmId), tscrypto::tsCryptoData::OID);
case CmsHeaderData_EncAlg::Choice_EncryptionAlgorithm: // AlgorithmIdentifier
    return _EncAlg._EncryptionAlgorithm._oid.oid();
default:
    return tscrypto::tsCryptoData();
}
]]>
                    </Function>
                    <Function ReturnType="tscrypto::TS_ALG_ID" Name="getSignatureAlgorithmAsId" Parameters="" suffix="const">
                        <![CDATA[
if (_SignatureAlgorithm.value == nullptr)
    return tscrypto::_TS_ALG_ID::TS_ALG_INVALID;
                                    
return tsCrypto::OIDtoID(dynamic_cast<tscrypto::AlgorithmIdentifier*>(_SignatureAlgorithm.value)->_oid.oidString());
]]>
                    </Function>
                    <Function ReturnType="tscrypto::tsCryptoData" Name="getSignatureAlgorithmAsOID" Parameters="" suffix="const">
                        <![CDATA[
if (_SignatureAlgorithm.value != nullptr)
    return dynamic_cast<tscrypto::AlgorithmIdentifier*>(_SignatureAlgorithm.value)->_oid.oid();
return tscrypto::tsCryptoData();
]]>
                    </Function>
                    <Function ReturnType="void" Name="setSignatureAlgorithmId" Parameters="tscrypto::TS_ALG_ID id">
<![CDATA[
tscrypto::AlgorithmIdentifier ai;
ai._oid.oidString(tsCrypto::IDtoOID(id));
_SignatureAlgorithm.set(ai);
]]>
                    </Function>-->
          <Function ReturnType="void" Name="setSignatureAlgorithm" Parameters="const tscrypto::tsCryptoData &amp;oid, const tscrypto::Asn1AnyField &amp;parameters">
            <![CDATA[
tscrypto::_POD_AlgorithmIdentifier ai;
ai.set_oid(oid);
ai.set_Parameter(parameters);
set_SignatureAlgorithm(ai);
]]>
          </Function>
        </Sequence>
      </Namespace>
    </Namespace>
  </File>
  <!--<Sequence Name="ProtectedExtensions" ElementType="CmsExtensionList" Tag="2" Type="Context" Optional="true"/>-->
  <!--<Sequence Name="UnprotectedExtensions" ElementType="CmsExtensionList" Tag="5" Type="Context" Optional="true"/>-->
  <!--<Sequence Name="CmsExtensionList" ElementType="CmsExtensionList">
                    <Array Name="Extension" ElementType="CmsExtension" Tag="Sequence" Type="Universal"/>
                </Sequence>-->
</Root>